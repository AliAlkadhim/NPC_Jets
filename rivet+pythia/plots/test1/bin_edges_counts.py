########PS+MPI+HAD
had_bin_edge=[2.100000e+01,2.400000e+01,2.800000e+01,3.200000e+01,3.700000e+01,4.300000e+01,4.900000e+01,5.600000e+01,6.400000e+01,7.400000e+01,8.400000e+01,9.700000e+01,1.140000e+02,1.330000e+02,1.530000e+02,1.740000e+02,1.960000e+02,2.200000e+02,2.450000e+02,2.720000e+02,3.000000e+02,3.300000e+02,3.620000e+02,3.950000e+02,4.300000e+02,4.680000e+02,5.070000e+02,5.480000e+02,5.920000e+02,6.380000e+02,6.860000e+02,7.370000e+02,7.900000e+02,8.460000e+02,9.050000e+02,9.670000e+02,1.032000e+03,1.101000e+03,1.172000e+03,1.248000e+03,1.327000e+03,1.410000e+03,1.497000e+03,1.588000e+03,1.784000e+03]

had_counts=[
2.635054e+07,
7.533805e+07,
3.670462e+06,
4.075754e+06,
2.136792e+06,
9.563013e+05,
9.926141e+05,
2.704795e+05,
2.281062e+05,
7.108218e+04,
3.046525e+04,
2.297214e+04,
8.543005e+03,
5.860490e+03,
3.424863e+03,
8.938800e+02,
3.927620e+02,
2.966606e+02,
1.570482e+02,
7.132782e+01,
6.405790e+01,
2.365181e+01,
1.717910e+01,
8.582609e+00,
5.748921e+00,
3.082090e+00,
2.326949e+00,
1.059190e+00,
8.589933e-01,
1.040123e-01,
4.666424e-01,
0.000000e+00,
2.418995e-01,
1.452373e-01,
6.865826e-02,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00,
0.000000e+00]

part_counts=[2.643760e+07,
8.656518e+06,
3.696755e+06,
3.170916e+06,
1.209596e+06,
6.017290e+05,
4.022917e+05,
2.119262e+05,
1.300436e+05,
4.840954e+04,
3.020849e+04,
1.555551e+04,
8.375605e+03,
3.340277e+03,
1.481930e+03,
7.890032e+02,
5.130750e+02,
2.194941e+02,
1.461315e+02,
7.053582e+01,
5.003060e+01,
2.157828e+01,
1.651564e+01,
1.107789e+01,
5.030276e+00,
4.438505e+00,
2.496290e+00,
1.119638e+00,
1.138141e+00,
3.684631e-01,
4.223406e-01,
1.001368e-01,
6.768396e-02,
3.842044e-05,
5.249871e-02,
2.490974e-05,
4.514138e-06,
4.365438e-06,
1.294254e-05,
3.126337e-16,
0.000000e+00,
0.000000e+00,
0.000000e+00,
3.698619e-10,
0.000000e+00,
]
import matplotlib.pyplot as plt
import numpy as np
scale_had=9.85124618264210400e-05
scale_part=3.23581172208720673e-22
ratio=(np.array( had_counts)*scale_had)/(np.array( part_counts)*scale_part)
# plt.step(had_bin_edge,np.array( had_counts)*scale_had, where="mid", color="k", linewidth=0.5,label='had')
# plt.step(had_bin_edge,np.array( part_counts)*scale_part, where="mid", color="k", linewidth=0.5,label='part')
plt.step(had_bin_edge,ratio, where="mid", color="k", linewidth=0.5,label='part')

plt.legend()
plt.show()